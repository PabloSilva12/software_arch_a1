networks:
  app-network:
    driver: bridge

services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cat/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  cassandra:
    image: cassandra:3.11
    ports:
      - "9042:9042"
    healthcheck:
      test: ["CMD", "nodetool", "status"]
      interval: 30s
      retries: 5
      timeout: 10s
    command: 
      - /bin/bash
      - -c
      - |
        /docker-entrypoint.sh cassandra -f &
        sleep 60  # Aumenta el tiempo de espera para dar m√°s tiempo a Cassandra
        cqlsh -e "
          CREATE KEYSPACE IF NOT EXISTS my_keyspace WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 1};
          USE my_keyspace;
          CREATE TABLE my_keyspace.authors (
            id UUID PRIMARY KEY,
            name TEXT,
            date_of_birth DATE,
            country_of_origin TEXT,
            short_description TEXT,
            image_url TEXT
          );
          CREATE TABLE my_keyspace.books (
            id UUID PRIMARY KEY,
            name TEXT,
            summary TEXT,
            date_of_publication DATE,
            number_of_sales INT,
            author_id UUID,
            cover_image_url TEXT
          );
          CREATE TABLE my_keyspace.reviews (
            id UUID PRIMARY KEY,
            review TEXT,
            score INT,
            number_of_up_votes INT,
            book_id UUID
          );
          CREATE TABLE my_keyspace.sales (
            id UUID PRIMARY KEY,
            book_id UUID,
            year INT,
            sales INT
          );
        "
        wait

    environment:
      - CASSANDRA_CLUSTER_NAME=Test Cluster
      - CASSANDRA_DC=dc1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    networks:
      - app-network

  web:
    build: .
    command: bundle exec rails s -b '0.0.0.0'
    volumes:
      - .:/var/www/my_app
    ports:
      - "3000:3000"
    depends_on:
      cassandra:
        condition: service_healthy
      redis:
        condition: service_healthy

    environment:
      - RAILS_ENV=development
      - REDIS_URL=redis://software_arch_a1-redis-1:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - IMAGE_STORAGE_PATH=/var/www/my_app/public/uploads 
      - USE_TRAEFIK_ASSETS=${USE_TRAEFIK_ASSETS:-false} 
    networks:
      - app-network
  whoami:
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      - app-network

  
volumes:
  esdata:
    driver: local
